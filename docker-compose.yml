version: "3.8"
services:
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile  # Assuming Dockerfile is in the user-service directory
    ports:
      - "3001:3001"
    networks:
      - qaapp-network
    environment:
      NODE_ENV: development
      DB_HOST: user-db
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: password
      DB_NAME: user_db

  question-service:
    build:
      context: ./question-service
      dockerfile: Dockerfile # Assuming Dockerfile is in the question-service directory
    ports:
      - "3002:3002"
    networks:
      - qaapp-network
    environment:
      NODE_ENV: development
      DB_HOST: question-db
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: password
      DB_NAME: question_db

  app-service:
    build:
      context: ./app-service
      dockerfile: Dockerfile # Assuming Dockerfile is in the app-service directory
    ports:
      - "3000:3000"
    depends_on:
      - user-service
      - question-service
    networks:
      - qaapp-network
    environment:
      NODE_ENV: development
      USER_SERVICE_HOST: user-service
      USER_SERVICE_PORT: 3001
      QUESTION_SERVICE_HOST: question-service
      QUESTION_SERVICE_PORT: 3002

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile # Assuming Dockerfile is in the gateway directory
    ports:
      - "8080:8080"
    depends_on:
      - app-service
    networks:
      - qaapp-network
    environment:
      NODE_ENV: development
      APP_SERVICE_HOST: app-service
      APP_SERVICE_PORT: 3000

  user-db:
    image: mariadb:10.6
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: user_db
    ports:
      - "3307:3306"
    networks:
      - qaapp-network
    volumes:
      - user_db_data:/var/lib/mysql

  question-db:
    image: mariadb:10.6
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: question_db
    ports:
      - "3308:3306"
    networks:
      - qaapp-network
    volumes:
      - question_db_data:/var/lib/mysql

  phpmyadmin-user:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"  # Access phpMyAdmin for user-db on port 8081
    environment:
      PMA_HOST: user-db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password # Add this line
    networks:
      - qaapp-network
    depends_on:
      - user-db

  phpmyadmin-question:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8082:80"  # Access phpMyAdmin for question-db on port 8082
    environment:
      PMA_HOST: question-db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password # Add this line
    networks:
      - qaapp-network
    depends_on:
      - question-db
      
networks:
  qaapp-network:
    driver: bridge

volumes:
  user_db_data:
  question_db_data: